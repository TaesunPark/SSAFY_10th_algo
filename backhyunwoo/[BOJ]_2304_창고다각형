import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;

public class boj {
    public static void main(String[] args) throws IOException {

    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    int n = Integer.parseInt(st.nextToken());
    int[][] pol = new int[n][2];
    int max = 0;
    int bmax = 0;
    int f = 0;
    int b = 0;
    int sum = 0;
    for (int i = 0; i < n; i++) {
        st = new StringTokenizer(br.readLine());
        pol[i][0] = Integer.parseInt(st.nextToken());
        pol[i][1] = Integer.parseInt(st.nextToken());
    }
    Arrays.sort(pol,new Comparator<int[]>() {

		@Override
		public int compare(int[] o1, int[] o2) {
			// TODO Auto-generated method stub
			if(o1[0]==o2[0]) {
				return o1[1]-o2[1];
			}else {
			return o1[0] -o2[0];
		}}
	});
    max = pol[0][1];
    for (int i = 0; i < n; i++) {
        if (max <= pol[i][1]) {
            sum += (pol[i][0] - pol[f][0])*max;
            f = i;
            max = pol[i][1];
        }
    }
    bmax = pol[n-1][ 1];
    b = n - 1;
    for (int i = n - 1; i >= 0; i--) {
        if (bmax <= pol[i][1]) {

            sum += (pol[b][0] - pol[i][0])*bmax;
            b = i;
            bmax = pol[i][1];
            if (bmax == max) {
                if(b==f) {
                	sum+=max;
                    break;
                }

            }
        }
    }
    System.out.println(sum);
}
}
